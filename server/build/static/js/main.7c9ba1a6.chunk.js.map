{"version":3,"sources":["components/Navbar/MenuItems.js","components/SignIn/signInStyle.js","components/SignIn/SignIn.js","components/Navbar/navbarMUIButtons.js","components/Navbar/Navbar.js","components/HomePage/HomePage.js","components/AboutPage/AboutPage.js","components/ContactUsPage/ContactUsPage.js","components/ConnectionStatus/ConnectionStatus.js","components/Publisher/Publisher.js","components/Subscriber/Subscriber.js","components/WebCall/WebCall.js","App.js","index.js","assets/FeelingTokative.jpg"],"names":["MenuItems","title","url","signInStyle","makeStyles","containerStyle","minWidth","display","flexDirection","alignItems","marginTop","marginBottom","submitButton","height","width","marginRight","marginLeft","backgroundColor","borderRadius","fontSize","textTransform","color","SignIn","props","signinMUIButtonStyles","signInMUIButtons","useState","autoFill","setAutoFill","username","password","testUser","submittedUsername","setSubmittedUsername","submittedPassword","setSubmittedPassword","Dialog","open","isOpen","onClose","setIsOpen","aria-labelledby","style","textAlign","DialogTitle","id","fontFamily","fontWeight","DialogContent","Container","classes","root","InputLabel","OutlinedInput","placeholder","type","fullWidth","value","onChange","e","target","DialogActions","justifyContent","Button","onClick","console","log","fetch","method","headers","body","JSON","stringify","then","res","status","setLoginSuccessful","disableRipple","navbarStyle","navbarItems","leftSideNavbar","navbarLogo","justifySelf","buttonBox","navbarButton","navbarChatroomSelection","navbarChatroomSelected","navbarSignin","Navbar","muiButtonStyles","navbarMUIButtons","signinOpen","setSigninOpen","className","map","item","index","currentTab","to","textDecoration","setCurrentTab","userLoggedIn","sessionName","json","setUserSessionDetails","API_KEY","SESSION_ID","TOKEN","disabled","setUserLoggedIn","loginSuccessful","HomePage","alt","opacity","src","feelingTokativeImg","AboutPage","ConnectionStatus","connected","Publisher","sessionError","sessionAudio","setSessionAudio","sessionVideo","setSessionVideo","sessionVideoSource","setSessionVideoSource","properties","publishAudio","publishVideo","videoSource","undefined","FormGroup","row","FormControlLabel","control","Checkbox","checked","labelStyle","iconStyle","fill","name","label","Subscriber","setSessionError","subscribeToAudio","subscribeToVideo","onError","preloadScript","sessionConnected","setSessionConnected","errorMessage","setErrorMessage","apiKey","sessionId","token","eventHandlers","err","App","userSessionDetails","path","component","ContactUsPage","render","from","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.7c9ba1a6.chunk.js","sourcesContent":["export const MenuItems = [\r\n  {\r\n    title: \"Home\",\r\n    url: \"/home\"\r\n  },\r\n  {\r\n    title: \"About\",\r\n    url: \"/about\"\r\n  },\r\n  {\r\n    title: \"Contact Us\",\r\n    url: \"/contact-us\"\r\n  }\r\n];\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst signInStyle = makeStyles({\r\n  containerStyle: {\r\n    minWidth: \"30vw\",\r\n\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n\r\n    marginTop: \"2rem\",\r\n    marginBottom: \"4rem\"\r\n  },\r\n  submitButton: {\r\n    height: \"3rem\",\r\n    width: \"10rem\",\r\n    marginRight: \"2rem\",\r\n    marginLeft: \"2rem\",\r\n    backgroundColor: \"#ff9900\",\r\n    borderRadius: \"500px\",\r\n\r\n    fontSize: \"1.1rem\",\r\n    textTransform: \"none\",\r\n    \"&:hover\": {\r\n      color: \"black\",\r\n      backgroundColor: \"#a36200\"\r\n    }\r\n  }\r\n});\r\n\r\nexport default signInStyle;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  TextField\r\n} from \"@material-ui/core\";\r\n\r\nimport signInMUIButtons from \"./signInStyle\";\r\n\r\nexport default function SignIn(props) {\r\n  // style variables\r\n  const signinMUIButtonStyles = signInMUIButtons();\r\n\r\n  // state variables\r\n  const [autoFill, setAutoFill] = useState(false);\r\n  const [testUser, setTestUser] = useState({\r\n    username: \"admin@test.com\",\r\n    password: \"12345\"\r\n  });\r\n  const [submittedUsername, setSubmittedUsername] = useState(\"\");\r\n  const [submittedPassword, setSubmittedPassword] = useState(\"\");\r\n\r\n  // close sign-in button handler\r\n  const handleClose = () => {\r\n    props.setIsOpen(false);\r\n  };\r\n\r\n  const getUserCredentials = () => {\r\n    console.log(\"User Details: \", {\r\n      username: submittedUsername,\r\n      password: submittedPassword\r\n    });\r\n\r\n    fetch(\"/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        username: submittedUsername,\r\n        password: submittedPassword\r\n      })\r\n    }).then(res => {\r\n      let status = res.status;\r\n      if (status == 200) {\r\n        props.setLoginSuccessful(true);\r\n        handleClose();\r\n      } else {\r\n        props.setLoginSuccessful(false);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.isOpen}\r\n        onClose={() => {\r\n          props.setIsOpen(false);\r\n        }}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        style={{ textAlign: \"center\" }}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\" style={{ marginTop: \"1rem\" }}>\r\n          <text\r\n            style={{\r\n              fontSize: \"25px\",\r\n              fontFamily: \"Piazzolla, serif\",\r\n              fontWeight: \"bold\"\r\n            }}\r\n          >\r\n            Sign In\r\n          </text>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <text style={{ color: \"red\" }}>\r\n            Note: <br />\r\n            Username and Password creation currently unavailable. <br />\r\n            Please use Autofill.\r\n          </text>\r\n          <Container classes={{ root: signinMUIButtonStyles.containerStyle }}>\r\n            <InputLabel style={{ marginBottom: \"1rem\" }}>Username</InputLabel>\r\n            <OutlinedInput\r\n              placeholder=\"e.g. john@example.com\"\r\n              id=\"name-sign-up-input\"\r\n              type=\"username\"\r\n              fullWidth\r\n              value={(autoFill && testUser.username) || null}\r\n              onChange={e => {\r\n                setSubmittedUsername(e.target.value);\r\n              }}\r\n            />\r\n            <InputLabel style={{ marginTop: \"2rem\", marginBottom: \"1rem\" }}>\r\n              Password\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              placeholder=\"e.g. *********\"\r\n              id=\"name-sign-up-input\"\r\n              type=\"name\"\r\n              fullWidth\r\n              value={(autoFill && testUser.password) || null}\r\n              onChange={e => {\r\n                setSubmittedPassword(e.target.value);\r\n              }}\r\n            />\r\n          </Container>\r\n          <text style={{ color: \"red\" }}>\r\n            Note: Autofill is for testing purposes only.\r\n          </text>\r\n        </DialogContent>\r\n        <DialogActions style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              marginBottom: \"1.5rem\"\r\n            }}\r\n          >\r\n            <Button\r\n              onClick={getUserCredentials}\r\n              classes={{ root: signinMUIButtonStyles.submitButton }}\r\n            >\r\n              Submit\r\n            </Button>\r\n            <Button\r\n              onClick={() => {\r\n                setAutoFill(!autoFill);\r\n                setSubmittedUsername(testUser.username);\r\n                setSubmittedPassword(testUser.password);\r\n              }}\r\n              disableRipple\r\n              color={(autoFill && \"secondary\") || (!autoFill && \"black\")}\r\n            >\r\n              AutoFill\r\n            </Button>\r\n          </div>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst navbarStyle = makeStyles({\r\n  navbarItems: {\r\n    height: \"80px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    flexDirection: \"row\",\r\n    fontSize: \"1.2rem\"\r\n  },\r\n  leftSideNavbar: {\r\n    display: \"flex\"\r\n  },\r\n  navbarLogo: {\r\n    fontFamily: \"Piazzolla, serif\",\r\n    color: \"#ff9900\",\r\n    justifySelf: \"start\",\r\n    marginLeft: \"2rem\",\r\n    marginTop: \"2rem\",\r\n    fontSize: \"5rem\"\r\n  },\r\n\r\n  buttonBox: {\r\n    marginTop: \"2rem\",\r\n    marginLeft: \"3rem\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\"\r\n  },\r\n\r\n  navbarButton: {\r\n    width: \"8rem\",\r\n    marginLeft: \"1rem\",\r\n    fontSize: \"1.1rem\",\r\n    color: \"#6b6b6b\",\r\n    textTransform: \"none\",\r\n    \"&:hover\": {\r\n      color: \"#a3a3a3\"\r\n    }\r\n  },\r\n\r\n  navbarChatroomSelection: {\r\n    marginRight: \"1rem\",\r\n    fontSize: \"1.1rem\",\r\n    color: \"#6b6b6b\",\r\n    textTransform: \"none\",\r\n    \"&:hover\": {\r\n      color: \"#ff9900\"\r\n    }\r\n  },\r\n\r\n  navbarChatroomSelected: {\r\n    marginRight: \"1rem\",\r\n    fontSize: \"1.2rem\",\r\n    color: \"#ff9900\",\r\n    textTransform: \"none\"\r\n  },\r\n\r\n  navbarSignin: {\r\n    height: \"3rem\",\r\n    width: \"10rem\",\r\n    marginRight: \"2rem\",\r\n    marginLeft: \"2rem\",\r\n    backgroundColor: \"#ff9900\",\r\n    borderRadius: \"500px\",\r\n\r\n    fontSize: \"1.1rem\",\r\n    textTransform: \"none\",\r\n    \"&:hover\": {\r\n      color: \"black\",\r\n      backgroundColor: \"#a36200\"\r\n    }\r\n  }\r\n});\r\n\r\nexport default navbarStyle;\r\n","import React, { useState } from \"react\";\r\nimport { MenuItems } from \"./MenuItems\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SignIn from \"../SignIn/SignIn\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport navbarMUIButtons from \"./navbarMUIButtons\";\r\nimport \"./Navbar.css\";\r\n\r\nexport default function Navbar(props) {\r\n  // style variables\r\n  const muiButtonStyles = navbarMUIButtons();\r\n\r\n  //state variables\r\n  const [signinOpen, setSigninOpen] = useState(false);\r\n\r\n  // fetch session ID\r\n  const createChatroom = () => {\r\n    props.setCurrentTab(\"Create Chatroom\");\r\n\r\n    fetch(\"/make-session\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        sessionName: \"TestSession\"\r\n      })\r\n    })\r\n      .then(res => {\r\n        let status = res.status;\r\n        if (status == 200) {\r\n          return res.json();\r\n        }\r\n      })\r\n      .then(res => {\r\n        props.setUserSessionDetails({\r\n          API_KEY: res.API_KEY,\r\n          SESSION_ID: res.SESSION_ID,\r\n          TOKEN: res.TOKEN\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar-items\">\r\n      <div className=\"leftSide-navbar\">\r\n        <h1 className=\"navbar-logo\">Tok</h1>\r\n        <div className=\"button-box\">\r\n          {MenuItems.map((item, index) => {\r\n            if (item.title === props.currentTab) {\r\n              return (\r\n                <Link to={`${item.url}`} style={{ textDecoration: \"none\" }}>\r\n                  <Button\r\n                    classes={{ root: muiButtonStyles.navbarButton }}\r\n                    disableRipple\r\n                    style={{\r\n                      color: \"#c2c2c2\",\r\n                      fontSize: \"1.2rem\"\r\n                    }}\r\n                    onClick={() => {\r\n                      props.setCurrentTab(item.title);\r\n                    }}\r\n                  >\r\n                    {item.title}\r\n                  </Button>\r\n                </Link>\r\n              );\r\n            } else {\r\n              return (\r\n                <Link to={`${item.url}`} style={{ textDecoration: \"none\" }}>\r\n                  <Button\r\n                    classes={{ root: muiButtonStyles.navbarButton }}\r\n                    disableRipple\r\n                    onClick={() => {\r\n                      props.setCurrentTab(item.title);\r\n                    }}\r\n                  >\r\n                    {item.title}\r\n                  </Button>\r\n                </Link>\r\n              );\r\n            }\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"button-box\">\r\n        {props.userLoggedIn && (\r\n          <Link to={\"/tokcall\"} style={{ textDecoration: \"none\" }}>\r\n            <Button\r\n              classes={{ root: muiButtonStyles.navbarChatroomSelection }}\r\n              disableRipple\r\n              onClick={createChatroom}\r\n              disabled={!props.userLoggedIn}\r\n            >\r\n              Create Chatroom\r\n            </Button>\r\n          </Link>\r\n        )}\r\n        <Button\r\n          classes={{ root: muiButtonStyles.navbarChatroomSelection }}\r\n          disableRipple\r\n        >\r\n          Join Chatroom\r\n        </Button>\r\n        <Button\r\n          classes={{ root: muiButtonStyles.navbarSignin }}\r\n          onClick={() => {\r\n            if (!props.userLoggedIn) setSigninOpen(true);\r\n            else props.setUserLoggedIn(false);\r\n          }}\r\n        >\r\n          {(!props.userLoggedIn && \"Sign In\") ||\r\n            (props.userLoggedIn && \"Log Out\")}\r\n        </Button>\r\n        <SignIn\r\n          isOpen={signinOpen}\r\n          setIsOpen={setSigninOpen}\r\n          loginSuccessful={props.userLoggedIn}\r\n          setLoginSuccessful={props.setUserLoggedIn}\r\n        />\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./HomePage.css\";\r\nimport feelingTokativeImg from \"../../assets/FeelingTokative.jpg\";\r\n\r\nexport default function HomePage() {\r\n  return (\r\n    <div className=\"main-container\">\r\n      <div className=\"text-container\">\r\n        <h1 className=\"text-title\">\r\n          Feeling{\" \"}\r\n          <text className=\"tok-text\" style={{ fontSize: \"3.5rem\" }}>\r\n            Tok\r\n          </text>\r\n          ative?\r\n        </h1>\r\n        <p className=\"text-subtitle\">You'll get no complaints from us!</p>\r\n        <p className=\"text-body\">\r\n          <text className=\"sign-up-hyperlink\">Sign Up</text> now, and start{\" \"}\r\n          <text className=\"tok-text\">Tok</text>ing today.\r\n        </p>\r\n      </div>\r\n      <div className=\"image-container\">\r\n        <img\r\n          alt=\"woman-chatting\"\r\n          style={{ width: \"80%\", height: \"65%\", opacity: 0.75 }}\r\n          src={feelingTokativeImg}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./AboutPage.css\";\r\n\r\nexport default function AboutPage() {\r\n  return (\r\n    <div className=\"main-container\">\r\n      <div className=\"text-container\">\r\n        <h1 className=\"text-title\">\r\n          This is the{\" \"}\r\n          <text className=\"tok-text\" style={{ fontSize: \"3.5rem\" }}>\r\n            {\" \"}\r\n            About{\" \"}\r\n          </text>{\" \"}\r\n          Page\r\n        </h1>\r\n        <p className=\"text-subtitle\">\r\n          Unfortunately, it's still a work in progress.\r\n        </p>\r\n        <p style={{ marginTop: \"3rem\" }} className=\"text-body\">\r\n          So, please come back later for the full experience!\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./ContactUsPage.css\";\r\n\r\nexport default function AboutPage() {\r\n  return (\r\n    <div className=\"main-container\">\r\n      <div className=\"text-container\">\r\n        <h1 className=\"text-title\">\r\n          This is the{\" \"}\r\n          <text className=\"tok-text\" style={{ fontSize: \"3.5rem\" }}>\r\n            Contact Us\r\n          </text>{\" \"}\r\n          Page\r\n        </h1>\r\n        <p className=\"text-subtitle\">\r\n          Unfortunately, it's still a work in progress.\r\n        </p>\r\n        <p style={{ marginTop: \"3rem\" }} className=\"text-body\">\r\n          So, please come back later for the full experience!\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nfunction ConnectionStatus(props) {\r\n  const [sessionConnected, setSessionConnected] = useState(props.connected);\r\n  return (\r\n    <div className=\"connectionStatus\">\r\n      <strong>Status: </strong> {props.connected}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConnectionStatus;\r\n","import React, { useState } from \"react\";\r\nimport { OTPublisher } from \"opentok-react\";\r\nimport { Checkbox, FormControlLabel, FormGroup } from \"@material-ui/core\";\r\n\r\nfunction Publisher() {\r\n  const [sessionError, setSessionError] = useState(null);\r\n  const [sessionAudio, setSessionAudio] = useState(true);\r\n  const [sessionVideo, setSessionVideo] = useState(true);\r\n  const [sessionVideoSource, setSessionVideoSource] = useState(\"camera\");\r\n\r\n  const changeVideoSource = videoSource => {\r\n    if (videoSource !== \"camera\") {\r\n      setSessionVideoSource(\"camera\");\r\n    } else {\r\n      setSessionVideoSource(\"screen\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"publisher\">\r\n      <text className=\"titleText\"> Publisher </text>\r\n      {sessionError ? <div id=\"error\">{sessionError}</div> : null}\r\n      <OTPublisher\r\n        properties={{\r\n          publishAudio: sessionAudio,\r\n          publishVideo: sessionVideo,\r\n          videoSource: sessionVideoSource === \"screen\" ? \"screen\" : undefined\r\n        }}\r\n      />\r\n      <FormGroup row>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={sessionVideoSource === \"camera\" ? false : true}\r\n              onChange={() => {\r\n                setSessionVideoSource(\r\n                  sessionVideoSource === \"camera\" ? \"screen\" : \"camera\"\r\n                );\r\n              }}\r\n              labelStyle={{ color: \"white\" }}\r\n              iconStyle={{ fill: \"white\" }}\r\n              name=\"video-session-source-checkbox\"\r\n            />\r\n          }\r\n          label=\"Share Screen\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={!sessionAudio}\r\n              onChange={() => {\r\n                setSessionAudio(!sessionAudio);\r\n              }}\r\n              name=\"audio-session-checkbox\"\r\n            />\r\n          }\r\n          label=\"Mute Audio\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={sessionVideo}\r\n              onChange={() => {\r\n                setSessionVideo(!sessionVideo);\r\n              }}\r\n              name=\"video-session-checkbox\"\r\n            />\r\n          }\r\n          label=\"Show Video\"\r\n        />\r\n      </FormGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Publisher;\r\n","import React, { useState } from \"react\";\r\nimport { OTSubscriber } from \"opentok-react\";\r\nimport { Checkbox, FormControlLabel, FormGroup } from \"@material-ui/core\";\r\n\r\nfunction Subscriber() {\r\n  const [sessionError, setSessionError] = useState(null);\r\n  const [sessionAudio, setSessionAudio] = useState(true);\r\n  const [sessionVideo, setSessionVideo] = useState(true);\r\n\r\n  return (\r\n    <div className=\"subscriber\">\r\n      Subscriber\r\n      {sessionError ? <div id=\"error\"> {sessionError} </div> : null}\r\n      <OTSubscriber\r\n        properties={{\r\n          subscribeToAudio: sessionAudio,\r\n          subscribeToVideo: sessionVideo\r\n        }}\r\n        onError={setSessionError}\r\n      />\r\n      <FormGroup>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={sessionAudio}\r\n              onChange={() => {\r\n                setSessionAudio(!sessionAudio);\r\n              }}\r\n              name=\"audio-session-checkbox\"\r\n            />\r\n          }\r\n          label=\"Mute Audio\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={sessionVideo}\r\n              onChange={() => {\r\n                setSessionVideo(!sessionVideo);\r\n              }}\r\n              name=\"video-session-checkbox\"\r\n            />\r\n          }\r\n          label=\"Stop Video\"\r\n        />\r\n      </FormGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Subscriber;\r\n","import React, { useState } from \"react\";\nimport \"./WebCall.css\";\n\nimport { OTSession, OTStreams, preloadScript } from \"opentok-react\";\nimport ConnectionStatus from \"../ConnectionStatus/ConnectionStatus\";\nimport Publisher from \"../Publisher/Publisher\";\nimport Subscriber from \"../Subscriber/Subscriber\";\n\nfunction WebCall(props) {\n  const [sessionConnected, setSessionConnected] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const onError = err => {\n    setErrorMessage(`Failed to connect: ${err}`);\n  };\n\n  return (\n    <div>\n      <OTSession\n        apiKey={props.apiKey}\n        sessionId={props.sessionId}\n        token={props.token}\n        eventHandlers={setSessionConnected}\n        onError={onError}\n      >\n        {errorMessage ? <div id=\"error\">{errorMessage}</div> : null}\n        <ConnectionStatus connected={sessionConnected} />\n        <Publisher />\n        <OTStreams>\n          <Subscriber />\n        </OTStreams>\n      </OTSession>\n    </div>\n  );\n}\n\nexport default preloadScript(WebCall);\n","import React, { useState } from \"react\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport HomePage from \"./components/HomePage/HomePage\";\r\nimport AboutPage from \"./components/AboutPage/AboutPage\";\r\nimport ContactUsPage from \"./components/ContactUsPage/ContactUsPage\";\r\nimport WebCall from \"./components/WebCall/WebCall\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport \"./theme.css\";\r\n\r\nexport default function App() {\r\n  const [currentTab, setCurrentTab] = useState(\"Home\");\r\n  const [userLoggedIn, setUserLoggedIn] = useState(false);\r\n  const [userSessionDetails, setUserSessionDetails] = useState({\r\n    API_KEY: \"\",\r\n    SESSION_ID: \"\",\r\n    TOKEN: \"\"\r\n  });\r\n\r\n  return (\r\n    <Router>\r\n      <Navbar\r\n        currentTab={currentTab}\r\n        setCurrentTab={setCurrentTab}\r\n        userLoggedIn={userLoggedIn}\r\n        setUserLoggedIn={setUserLoggedIn}\r\n        userSessionDetails={userSessionDetails}\r\n        setUserSessionDetails={setUserSessionDetails}\r\n      />\r\n      <Switch>\r\n        <Route path=\"/home\" component={HomePage} />\r\n        <Route path=\"/about\" component={AboutPage} />\r\n        <Route path=\"/contact-us\" component={ContactUsPage} />\r\n        <Route\r\n          path=\"/tokcall\"\r\n          render={() => (\r\n            <div>\r\n              {userSessionDetails.API_KEY !== \"\" && (\r\n                <WebCall\r\n                  apiKey={userSessionDetails.API_KEY}\r\n                  sessionId={userSessionDetails.SESSION_ID}\r\n                  token={userSessionDetails.TOKEN}\r\n                />\r\n              )}\r\n            </div>\r\n          )}\r\n        />\r\n        <Redirect from=\"/\" to=\"/home\" />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./theme.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","module.exports = __webpack_public_path__ + \"static/media/FeelingTokative.6d683396.jpg\";"],"sourceRoot":""}